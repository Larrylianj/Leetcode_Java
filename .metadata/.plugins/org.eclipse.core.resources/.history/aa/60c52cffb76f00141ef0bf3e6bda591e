import java.util.*;

public class Solution {
    
	public static void main(String arg[]){
		Solution s = new Solution();
		int c[] = {1};
		int t = 2;
		System.out.print(s.combinationSum(c, t));
	}
	
    HashSet<List<Integer>> visited = new HashSet<List<Integer>>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> output = new ArrayList<List<Integer>>();
        for(int i = 0;i < candidates.length;i++){
            int subT = target-candidates[i];
            if(subT > 0){
                List<List<Integer>> lst = combinationSum(candidates, subT);
                for(int j = 0;j < lst.size();j++){
                	int lstlength = lst.get(j).size();
                    for(int u = 0;u < lstlength;u++){
                        if(lst.get(j).get(u) >= candidates[i])
                            lst.get(j).add(u,candidates[i]);
                    }
                    if(!visited.contains(lst.get(j))){
                        visited.add(lst.get(j));
                        output.add(lst.get(j));
                    }
                }
            }else if(subT == 0){
                List<Integer> oneIntegerLst = new ArrayList<Integer>();
                oneIntegerLst.add(target);
                output.add(oneIntegerLst);
            }
        }
        return output;
    }
}