import java.util.Stack;

public class Solution {
	
	public static void main(String arg[]){
		Solution s = new Solution();
		String s1 = "";
		String s2 = "";
		String s3 = "";
		System.out.println(s.isInterleave(s1, s2, s3));
	}
    
    class Node{
        int k; // the position in s3
        int p; // the position in s1
        int q; // the position in s2
        Node(int a, int b, int c){
            k = a;
            p = b;
            q = c;
        }
    }
    
    public boolean isInterleave(String s1, String s2, String s3) {
        // DFS
        Stack<Node> stack = new Stack<Node>();
        Node zero = new Node(0,0,0);
        stack.push(zero);
        while(!stack.isEmpty()){
            Node node = stack.pop();
            if(node.k==s3.length() && node.p==s1.length() && node.q==s2.length())
                return true;
            if(node.k < s3.length()){
            if(node.p < s1.length()){
                if(s1.charAt(node.p)==s3.charAt(node.k)){
                    Node node1 = new Node(node.k+1,node.p+1,node.q);
                    stack.push(node1);
                }
            }
            if(node.q < s2.length()){
                if(s2.charAt(node.q)==s3.charAt(node.k)){
                    Node node2 = new Node(node.k+1, node.p, node.q+1);
                    stack.push(node2);
                }
            }
            }
        }
        return false;
    }
}