import java.util.HashSet;


public class Solution {
	public static void main(String args[]){
		String[] a = {};
		String[] b = {"(((((())))))","((((()()))))","((((())())))","((((()))()))","((((())))())","((((()))))()","(((()(()))))","(((()()())))","(((()())()))","(((()()))())","(((()())))()","(((())(())))","(((())()()))","(((())())())","(((())()))()","(((()))(()))","(((()))()())","(((()))())()","(((())))(())","(((())))()()","((()((()))))","((()(()())))","((()(())()))","((()(()))())","((()(())))()","((()()(())))","((()()()()))","((()()())())","((()()()))()","((()())(()))","((()())()())","((()())())()","((()()))(())","((()()))()()","((())((())))","((())(()()))","((())(())())","((())(()))()","((())()(()))","((())()()())","((())()())()","((())())(())","((())())()()","((()))((()))","((()))(()())","((()))(())()","((()))()(())","((()))()()()","(()(((()))))","(()((()())))","(()((())()))","(()((()))())","(()((())))()","(()(()(())))","(()(()()()))","(()(()())())","(()(()()))()","(()(())(()))","(()(())()())","(()(())())()","(()(()))(())","(()(()))()()","(()()((())))","(()()(()()))","(()()(())())","(()()(()))()","(()()()(()))","(()()()()())","(()()()())()","(()()())(())","(()()())()()","(()())((()))","(()())(()())","(()())(())()","(()())()(())","(()())()()()","(())(((())))","(())((()()))","(())((())())","(())((()))()","(())(()(()))","(())(()()())","(())(()())()","(())(())(())","(())(())()()","(())()((()))","(())()(()())","(())()(())()","(())()()(())","(())()()()()","()((((()))))","()(((()())))","()(((())()))","()(((()))())","()(((())))()","()((()(())))","()((()()()))","()((()())())","()((()()))()","()((())(()))","()((())()())","()((())())()","()((()))(())","()((()))()()","()(()((())))","()(()(()()))","()(()(())())","()(()(()))()","()(()()(()))","()(()()()())","()(()()())()","()(()())(())","()(()())()()","()(())((()))","()(())(()())","()(())(())()","()(())()(())","()(())()()()","()()(((())))","()()((()()))","()()((())())","()()((()))()","()()(()(()))","()()(()()())","()()(()())()","()()(())(())","()()(())()()","()()()((()))","()()()(()())","()()()(())()","()()()()(())","()()()()()()"};
		HashSet<String> set = new HashSet<String>();
		for(int i = 0;i < a.length;i++)
			set.add(a[i]);
		for(int i = 0;i < b.length;i++)
			if(!set.contains(b[i]))
				System.out.print(b[i]);
	}
	
	public class Solution {
	    public List<String> generateParenthesis(int n) {
	        List<List<String>> opt = new ArrayList<List<String>>();
	        // base case
	        List<String> zero = new ArrayList<String>();
	        List<String> one = new ArrayList<String>();
	        one.add("()");
	        opt.add(zero);
	        opt.add(one);
	        // iteration
	        for(int i = 2;i <= n;i++){
	            List<String> current = new ArrayList<String>();
	            HashSet<String> visited = new HashSet<String>();
	            for(int j = 1;j <= i/2;j++){
	                List<String> lst = combine(opt.get(j), opt.get(i-j), visited);
	                for(int u = 0;u < lst.size();u++)
	                    current.add(lst.get(u));
	            }
	            for(int j = 0;j < opt.get(i-1).size();j++){
	                String outer = "("+opt.get(i-1).get(j)+")";
	                current.add(outer);
	            }
	            opt.add(current);
	        }
	        
	        return opt.get(n);
	    }
	    
	    private List<String> combine(List<String> a, List<String> b, HashSet<String> visited){
	        List<String> output = new ArrayList<String>();
	        for(int i = 0;i < a.size();i++){
	            for(int j = 0;j < b.size();j++){
	                String left = a.get(i) + b.get(j);
	                String right = b.get(j) + a.get(i);
	                if(!visited.contains(left)){
	                    visited.add(left);
	                    output.add(left);
	                }
	                if(!visited.contains(right)){
	                    visited.add(right);
	                    output.add(right);
	                }
	            }
	        }
	        return output;
	    }
	}
}
